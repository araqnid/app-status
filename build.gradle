plugins {
    id "java"
    id "org.jetbrains.kotlin.jvm" version "1.2.0"
    id "com.timgroup.webpack" version "1.0.1" apply false
}

group = 'org.araqnid'
version = "0.0.${System.getenv("BUILD_NUMBER") ?: 0}"

jar {
    manifest {
        attributes 'Implementation-Title': project.description ?: project.name
        if (version) attributes 'Implementation-Version': version
    }
    into('org/araqnid/appstatus/site') {
        from("ui/build/site")
    }
}
jar.dependsOn(":ui:build")

allprojects {
    repositories {
        mavenCentral()
        maven {
            url "https://repo.araqnid.org/maven/"
        }
    }

    tasks.withType(JavaCompile) {
        sourceCompatibility = "1.8"
        options.encoding = "UTF-8"
        options.compilerArgs << "-parameters"
        options.incremental = true
        options.deprecation = true
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            jvmTarget = "1.8"
            freeCompilerArgs = ["-Xjsr305=strict"]
        }
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.java
    from sourceSets.main.kotlin
    classifier "sources"
}

apply plugin: 'maven-publish'
publishing {
    repositories {
        maven {
            url "https://repo.araqnid.org/maven/"
            credentials {
                username = 'repo-user'
                password = 'repo-password'
            }
        }
    }
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact(sourceJar) {
                classifier "sources"
            }
        }
    }
}

dependencies {
    compile "com.google.guava:guava:23.5-jre"
    compile "com.google.inject:guice:4.1.0"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.2.0"
    compile "org.jetbrains.kotlin:kotlin-reflect:1.2.0"
    compile "com.fasterxml.jackson.core:jackson-annotations:2.8.0"
    testCompile "junit:junit:4.12"
    testCompile "org.hamcrest:hamcrest-library:1.3"
}

// SRH- source attachments don't appear in IntelliJ downstream
//apply plugin: 'ivy-publish'
//publishing {
//    repositories {
//        ivy {
//            url "$buildDir/repo.ivy-new"
//        }
//    }
//    publications {
//        ivyJava(IvyPublication) {
//            from components.java
//            artifact(sourceJar) {
//                type "source"
//                conf "runtime"
//            }
//        }
//    }
//}
